{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","loading","setLoading","isError","setIsError","onSubmit","queryString","fetch","then","res","json","catch","Response","Error","getMovie","toLowerCase","data","properPoster","Poster","Title","Plot","imdbID","finally","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","some","currentMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,wBCAZ,IAAMC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOf,EAAP,KAAckB,EAAd,KACA,EAA8BH,oBAAkB,GAAhD,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,oBAAkB,GAAhD,mBAAOM,EAAP,KAAgBC,EAAhB,KAQMC,EAAW,SAACC,GAChBJ,GAAW,GCtBR,SAAkBJ,GACvB,OAAOS,MAAM,GAAD,OAHE,2CAGF,cAAiBT,IAC1BU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDmBTC,CAASR,EAAYS,eAClBP,MAAK,SAACQ,GACL,GAAI,UAAWA,EAAM,CACnB,IAAMC,EAA+B,QAAhBD,EAAKE,OACtB,4DACAF,EAAKE,OAETlB,EAAS,CACPb,MAAO6B,EAAKG,MACZ/B,YAAa4B,EAAKI,KAClBnC,OAAQgC,EACR3B,QAAQ,8BAAD,OAAgC0B,EAAKK,QAC5C3B,OAAQsB,EAAKK,cAGfjB,GAAW,MAEZkB,SAAQ,kBAAMpB,GAAW,OAiBhC,OACE,qCACE,uBAAMnB,UAAU,aAAasB,SAhBT,SAACkB,GACvBA,EAAMC,iBACNnB,EAASP,IAcP,UACE,sBAAKf,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ0C,QAAQ,cAAjC,yBAGA,qBAAK1C,UAAU,UAAf,SACE,uBACE,UAAQ,aACR2C,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7C,UACE8C,IAAW,QAAS,CAClB,YAAa1B,IAGjB2B,MAAOhC,EACPiC,SA7DR,SAACR,GACDxB,EAASwB,EAAMS,OAAOF,OACtB1B,GAAW,QAgELD,GAEE,mBAAGpB,UAAU,iBAAiB,UAAQ,eAAtC,qDAON,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR2C,KAAK,SACL3C,UAAW8C,IAAW,kBACpB,CACE,aAAc5B,IAElBgC,UAAWnC,EAPb,SASGhB,EAAQ,eAAiB,mBAK5BA,GAEE,qBAAKC,UAAU,UAAf,SACE,wBACE,UAAQ,YACR2C,KAAK,SACL3C,UAAU,oBACVmD,QAjEG,WACbpD,GACFc,EAASd,GAGXiB,EAAS,IACTC,EAAS,OAuDG,qCAeRlB,GAEE,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WE/HjBqD,EAAM,WACjB,MAA4BtC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe4C,EAAf,KAYA,OACE,sBAAKrD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,SAlBS,SAACd,IACOU,EAAO6C,MAC5B,SAAAC,GAAY,OAAIA,EAAa5C,SAAWZ,EAAMY,WAI9C0C,GAAU,SAAAG,GAAU,4BAAQA,GAAR,CAAoBzD,gBCZ9C0D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a8d2a920.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  addMovie: (mov: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const onChangeHandler\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setQuery(event.target.value);\n      setIsError(false);\n    };\n\n  const onSubmit = (queryString: string) => {\n    setLoading(true);\n\n    getMovie(queryString.toLowerCase())\n      .then((data: MovieData | ResponseError) => {\n        if ('Title' in data) {\n          const properPoster = data.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : data.Poster;\n\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: properPoster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          });\n        } else {\n          setIsError(true);\n        }\n      }).finally(() => setLoading(false));\n  };\n\n  const onSubmitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  const onAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={onSubmitHandler}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames('input', {\n                  'is-danger': isError,\n                })\n              }\n              value={query}\n              onChange={onChangeHandler}\n            />\n          </div>\n\n          {\n            isError\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                {\n                  'is-loading': loading,\n                })}\n              disabled={!query}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {\n            movie\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={onAddMovie}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )\n          }\n        </div>\n      </form>\n\n      {\n        movie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8ac25516';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const movieIsUnique = !movies.some(\n      currentMovie => currentMovie.imdbId === movie.imdbId,\n    );\n\n    if (movieIsUnique) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}